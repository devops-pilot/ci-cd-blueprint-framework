name: CI Pipeline

on:
  push:

jobs:
  read-blueprint:
    name: read-blueprint
    runs-on: ubuntu-latest
    outputs:
      language: ${{ steps.detect.outputs.language }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Detect language
        id: detect
        run: |
          if [ -f "./orders-service/pom.xml" ]; then
            echo "language=java" >> $GITHUB_OUTPUT
          elif [ -f "./orders-service/package.json" ]; then
            echo "language=node" >> $GITHUB_OUTPUT
          elif [ -f "./orders-service/main.py" ]; then
            echo "language=python" >> $GITHUB_OUTPUT
          else
            echo "language=unknown" >> $GITHUB_OUTPUT
          fi

  # -------------------------
  # Java CI
  # -------------------------
  java-lint:
    name: java-ci / lint
    needs: read-blueprint
    if: ${{ needs.read-blueprint.outputs.language == 'java' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint Java
        run: echo "Running Java lint"

  java-test:
    name: java-ci / test
    needs: java-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test Java
        run: echo "Running Java tests"

  java-build:
    name: java-ci / build
    needs: java-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Java
        run: |
          cd orders-service
          mvn package

  java-deploy:
    name: java-ci / deploy
    needs: java-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Java
        run: echo "Deploying Java service"

  # -------------------------
  # Node.js CI
  # -------------------------
  node-lint:
    name: node-ci / lint
    needs: read-blueprint
    if: ${{ needs.read-blueprint.outputs.language == 'node' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Node Lint
        run: |
          cd orders-service
          npm ci
          npm run lint || echo "Lint warnings"

  node-test:
    name: node-ci / test
    needs: node-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Node Test
        run: |
          cd orders-service
          npm test

  node-build:
    name: node-ci / build
    needs: node-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Node Build
        run: |
          cd orders-service
          npm run build

  node-deploy:
    name: node-ci / deploy
    needs: node-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Node.js
        run: echo "Deploying Node.js service"

  # -------------------------
  # Python CI
  # -------------------------
  python-lint:
    name: python-ci / lint
    needs: read-blueprint
    if: ${{ needs.read-blueprint.outputs.language == 'python' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Python Lint
        run: |
          pip install flake8
          cd orders-service
          flake8 main.py || echo "Lint issues"

  python-test:
    name: python-ci / test
    needs: python-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Python Test
        run: |
          cd orders-service
          echo "Run tests here (e.g. pytest)"

  python-build:
    name: python-ci / build
    needs: python-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Python Build
        run: |
          cd orders-service
          python -m py_compile main.py

  python-deploy:
    name: python-ci / deploy
    needs: python-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Deploy Python
        run: echo "Deploying Python service"
